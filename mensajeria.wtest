import mensajeria.*
import mensajeros.*


describe "2 " {

    test "Contratar un mensajero" {
        mensajeria.contratarMensajero(neo)
        assert.equals(1, mensajeria.mensajeros().size())
    }
    test "Despedir a un mensajero" {
        mensajeria.contratarMensajero(neo)
        assert.equals(1, mensajeria.mensajeros().size())
        mensajeria.despedirMensajero(neo)
        assert.equals(0, mensajeria.mensajeros().size())
    }
    test "Despedir a todos los mensajeros" {
        mensajeria.contratarMensajero(neo)        
        mensajeria.contratarMensajero(morfeo)
        assert.equals(2, mensajeria.mensajeros().size())
        mensajeria.despedirTodos()
        assert.equals(0, mensajeria.mensajeros().size())
    }
    test "Chequear si la mensajeria es grande" {
        mensajeria.contratarMensajero(neo)
        assert.notThat(mensajeria.esMensajeriaGrande())        
        mensajeria.contratarMensajero(morfeo)
        mensajeria.contratarMensajero(trinity)       
        assert.that(mensajeria.esMensajeriaGrande())
    }
    test "Consultar si un paquete puede ser entregado por el primer empleado de la empresa" {
        mensajeria.contratarMensajero(morfeo)
        mensajeria.contratarMensajero(trinity)       
        assert.notThat(mensajeria.puedeSerEntregadoPorPrimerEmpleado())
        paquete.pagar()
        assert.that(mensajeria.puedeSerEntregadoPorPrimerEmpleado())
    }
    test "Saber el peso del ultimo mensajero" {
        mensajeria.contratarMensajero(morfeo)
        mensajeria.contratarMensajero(trinity)
        assert.equals(900, mensajeria.pesoUltimoMensajero())
    }


}


describe "3 " {}
